@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    @if (User.Identity.Name == "admin@bookloud.com")
     {
         <li class="nav-item">
             <a  class="nav-link" asp-controller="Admin" asp-action="Index">Admin Panel</a> 
             </li>
     }
    <li class="nav-item">
        <a  class="nav-link" asp-controller="AddBook" asp-action="Index">Add Books</a> 
    </li>
    <li class="nav-item">
        <a  class="nav-link" asp-controller="User" asp-action="Index">My Store</a> 
    </li>
    <li class="nav-item">
        <a  class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hi @User.Identity.Name</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
        }
else
        {
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>